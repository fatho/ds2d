use super::context::BackendError;

/// All the errors generated by the graphics subsystem.
#[derive(Debug)]
pub enum GraphicsError {
    /// An error in the graphics backend.
    Backend(BackendError),
    /// An error when dealing with image data.
    Image(image::ImageError),
}

impl From<image::ImageError> for GraphicsError {
    fn from(err: image::ImageError) -> Self {
        GraphicsError::Image(err)
    }
}

impl From<BackendError> for GraphicsError {
    fn from(err: BackendError) -> Self {
        GraphicsError::Backend(err)
    }
}

impl std::fmt::Display for GraphicsError {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            GraphicsError::Image(err) => write!(f, "Failed to load image: {}", err),
            GraphicsError::Backend(err) => write!(f, "Failed to create texture: {}", err),
        }
    }
}
